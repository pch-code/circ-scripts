1. Run STARchip. 
2. Create a bed file of merged exonic coordinates and flanking introns based on the circRNA isoform coordinates (will use it to get exact GC and length for DESeq).
   - MakeExonBedForMerging.pl -i Main.gtf to create the *.exonsByGene.bed file
   - Merge with bedops:

Using a rat genome exaple: 

perl MakeExonBedForMerging.pl -i Rattus_norvegicus.Rnor_6.0.96.gtf -o Rattus_norvegicus.Rnor_6.0.96.exonsByGene.bed

bedops -m Rattus_norvegicus.Rnor_6.0.96.exonsByGene.bed > Rattus_norvegicus.Rnor_6.0.96.MergedExonsByGene.txt

cut -f4 Rattus_norvegicus.Rnor_6.0.96.exonsByGene.bed | sort | uniq | awk -F'_' '{ system("grep "$1" Rattus_norvegicus.Rnor_6.0.96.exonsByGene.bed | bedops --merge - "); print $0; }' > Rattus_norvegicus.Rnor_6.0.96.MergedExonsByGene.txt


   - Make merged CircRNA.bed file from  Rattus_norvegicus.Rnor_6.0.96.MergedExonsByGene.txt

   perl GetExonsAndFlankingIntronsRegionsPerAnnotatedCircRNA.pl -i Rattus_norvegicus.Rnor_6.0.96.MergedExonsByGene.txt -c circRNA.5reads.1ind.annotated -o circRNAExonicCoords.txt
   -i here is the output of the step above.
   
   Output looks like this:
chr10	101667886	101667980	ENSG00000107829:FBXW4:chr10:101667886:101676436
chr10	101672915	101673047	ENSG00000107829:FBXW4:chr10:101667886:101676436
chr10	101673488	101673673	ENSG00000107829:FBXW4:chr10:101667886:101676436

   
3. bedtools nuc -fi ~/Reference/Rat/Rattus_norvegicus.Rnor_6.0.dna.toplevel.fa -bed circRNAExonicCoords.txt > MergedIntervalsGC.txt
   echo -e "Gene\tgc\tlength" > CircRNA_GC_Len.txt && awk '{print $4"\t"$6"\t"$13}' MergedIntervalsGC.txt | grep "ENS" >> CircRNA_GC_Len.txt
   perl AddExonLengths_WeightedAvgGC_Annot.pl -i CircRNA_GC_Len.txt -o CollapsedCircRNA_GC_Len.txt # this will also create AnnotatedCircRNA_Counts.txt
   
4. perl makeBed.pl -i AnnotatedCircRNA_Counts.txt -o circRNA.bed

5. Run RSEM with a full transcript GTF file and with the --output-genome-bam and --sampling-for-bam options.  This will generate a genome-level BAM with each read mapped to a single location. 

6.
for file in Alignments_transcriptome/G1-16.Aligned.toTranscriptome.out.bam
do
   outfile=${file%%.Aligned.toTranscriptome.out.bam}
   outfile=${outfile##Alignments_transcriptome/}
  
  rsem-calculate-expression --output-genome-bam --sampling-for-bam -p 12 --alignments --paired-end --strandedness reverse Alignments_transcriptome/$outfile.Aligned.toTranscriptome.out.bam $ref $outfile

done

7.
Use the created file to generate circRNA coverage files
for file in *.genome.bam
do
  outfile=${file%%.genome.bam}
  bedtools coverage -abam $file -b circRNA.bed > $outfile.cov.txt
done

8. Calculate median insert size for every sample. Copy all output to a subfolder. It will be used to estimate percentage of circRNA in the next step. 
Median insert size is hardcoded in EstCircCounts_FragCountNormByExonicLen.pl
for file in *.genome.bam

do
  
  outfile=${file%%.genome.bam}

  
  java -jar picard.jar CollectInsertSizeMetrics I=$file O=$outfile.InsSize.txt H=$outfile.InsSize.pdf

done
 

9. Run EstCircCounts_FragCountNormByExonicLen.bat
perl EstCircCounts_FragCountNormByExonicLen.pl -i circRNARegions_TotalRNACov -g Main.gtf -c AnnotatedCircRNA_Counts.txt -s circs5.1.investigate.consensus -o EstCircRNAProportions.txt
-i is the directory with the Total coverages
-c created in step 3 (AnnotatedCircRNA_Counts.txt)

Now we have the counts and percentages of each circRNA isoform.

10. Run SubtractTheCircCounts.pl . We need to use the file with all sample Total-RNA counts to subtract from. This file is generated by PrepareCountsForDESeq_FromRSEM.pl

